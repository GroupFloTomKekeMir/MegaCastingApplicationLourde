/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fr.iia.MegaCasting;

import fr.iia.Class.Adresse;
import fr.iia.Class.Annonceur;
import fr.iia.Class.Diffuseur;
import fr.iia.Class.Evenement;
import fr.iia.Class.Musique;
import fr.iia.Class.Offre;
import fr.iia.Connection.JavaConnect;
import static fr.iia.Connection.JavaConnect.ConnectDB;
import static fr.iia.Connection.JavaConnect.ImportDriver;
import fr.iia.DAO.AnnonceursDAO;
import fr.iia.DAO.DiffuseursDAO;
import fr.iia.DAO.EvenementDAO;
import fr.iia.DAO.MusiqueDAO;
import fr.iia.DAO.OffreDAO;
import java.awt.Graphics;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Collection;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Enzo
 */
public class MegaCastingMain extends javax.swing.JFrame {


    Connection cnx = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    /**
     * Creates new form MegaCastingMain
     */
    public MegaCastingMain() {
        initComponents();
        ImportDriver();
        cnx = JavaConnect.ConnectDB();
        refreshAllList();
    }
    
    private void offreListe(){
        DefaultTableModel model = (DefaultTableModel) offreTab.getModel();
        model.setNumRows(0);
        OffreDAO offreDAO = new OffreDAO();
        Collection<Offre> offre = offreDAO.lister(cnx);
        
        for(Offre o : offre){
            model.addRow(new Object[]{
                o.getTitre(),
                o.getReference(),
                o.getDate_debut_publi(),
                o.getFin_publi(),
                o.getNbr_poste(),
                o.getDescription_poste(),
                o.getDescription_profil(),
                o.getDuree(),
                o.getContrat(),
                o.getAnnonceur(),
                o.getDiffuseur(),
                o.getMetier()              
            });
        }     
    }
    
    public void paintComponent(Graphics g){
    try {
      Image img = ImageIO.read(new File("Fond.jpg"));
      //g.drawImage(img, 50, 50, this);
      //Pour une image de fond
      g.drawImage(img, 50, 50, this.getWidth(), this.getHeight(), this);
    } catch (IOException e) {
      e.printStackTrace();
    }  
  }        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        page = new javax.swing.JTabbedPane();
        AccueilPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        offrePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        offreTab = new javax.swing.JTable();
        updateOffre = new javax.swing.JButton();
        supprimerOffreBouton = new javax.swing.JButton();
        annonceurPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        annonceurTab = new javax.swing.JTable();
        updateAnnonceurs = new javax.swing.JButton();
        supprimerAnnonceurBouton = new javax.swing.JButton();
        diffuseurPanel = new javax.swing.JPanel();
        updateDiffuseur = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        diffuseurTab = new javax.swing.JTable();
        supprimerDiffuseurBouton = new javax.swing.JButton();
        evenementPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        evenementTab = new javax.swing.JTable();
        updateEvenement = new javax.swing.JButton();
        supprimerEvenementBouton = new javax.swing.JButton();
        musiquePanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        musiqueTab = new javax.swing.JTable();
        updateMusique = new javax.swing.JButton();
        supprimerMusiqueBouton = new javax.swing.JButton();
        barreMenu = new javax.swing.JMenuBar();
        fichierMenu = new javax.swing.JMenu();
        ajouterMenuFichier = new javax.swing.JMenu();
        offreMenuAjouter = new javax.swing.JMenuItem();
        annonceurMenuAjouter = new javax.swing.JMenuItem();
        diffuseurMenuAjouter = new javax.swing.JMenuItem();
        evenementMenuAjouter = new javax.swing.JMenuItem();
        musiqueMenuAjouter = new javax.swing.JMenuItem();
        imprimerMenuFichier = new javax.swing.JMenuItem();
        quitterMenuFichier = new javax.swing.JMenuItem();
        editionMenu = new javax.swing.JMenu();
        aideMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Méga Casting");
        setResizable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/petitLogo.png"))); // NOI18N

        jButton1.setText("RefreshList");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AccueilPanelLayout = new javax.swing.GroupLayout(AccueilPanel);
        AccueilPanel.setLayout(AccueilPanelLayout);
        AccueilPanelLayout.setHorizontalGroup(
            AccueilPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccueilPanelLayout.createSequentialGroup()
                .addGroup(AccueilPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AccueilPanelLayout.createSequentialGroup()
                        .addGap(428, 428, 428)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AccueilPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)))
                .addContainerGap(601, Short.MAX_VALUE))
        );
        AccueilPanelLayout.setVerticalGroup(
            AccueilPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccueilPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jButton1)
                .addGap(86, 86, 86)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(172, Short.MAX_VALUE))
        );

        page.addTab("Accueil", AccueilPanel);

        offreTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titre", "Référence", "Début publication", "Fin publication", "Nombre de poste", "Description du poste", "Description du profil", "Durée du contrat(mois)", "Contrat", "Annonceur", "Diffuseur", "Metier"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        offreTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                offreTabMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(offreTab);

        updateOffre.setText("Mise à jour");
        updateOffre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateOffreActionPerformed(evt);
            }
        });

        supprimerOffreBouton.setText("Supprimer");
        supprimerOffreBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerOffreBoutonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout offrePanelLayout = new javax.swing.GroupLayout(offrePanel);
        offrePanel.setLayout(offrePanelLayout);
        offrePanelLayout.setHorizontalGroup(
            offrePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(offrePanelLayout.createSequentialGroup()
                .addGroup(offrePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(offrePanelLayout.createSequentialGroup()
                        .addComponent(updateOffre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(supprimerOffreBouton))
                    .addGroup(offrePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        offrePanelLayout.setVerticalGroup(
            offrePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, offrePanelLayout.createSequentialGroup()
                .addGroup(offrePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateOffre)
                    .addComponent(supprimerOffreBouton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        page.addTab("Offres", offrePanel);

        annonceurTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nom", "Email", "Telephone", "N° rue", "Nom rue", "Code Postal", "Ville", "Region", "Logo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(annonceurTab);

        updateAnnonceurs.setText("Mise à jour");
        updateAnnonceurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAnnonceursActionPerformed(evt);
            }
        });

        supprimerAnnonceurBouton.setText("Supprimer");
        supprimerAnnonceurBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerAnnonceurBoutonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout annonceurPanelLayout = new javax.swing.GroupLayout(annonceurPanel);
        annonceurPanel.setLayout(annonceurPanelLayout);
        annonceurPanelLayout.setHorizontalGroup(
            annonceurPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1261, Short.MAX_VALUE)
            .addGroup(annonceurPanelLayout.createSequentialGroup()
                .addComponent(updateAnnonceurs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(supprimerAnnonceurBouton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        annonceurPanelLayout.setVerticalGroup(
            annonceurPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, annonceurPanelLayout.createSequentialGroup()
                .addGroup(annonceurPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateAnnonceurs)
                    .addComponent(supprimerAnnonceurBouton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        page.addTab("Annonceurs", annonceurPanel);

        updateDiffuseur.setText("Mise à jour");
        updateDiffuseur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDiffuseurActionPerformed(evt);
            }
        });

        diffuseurTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nom", "Email", "Telephone", "N° rue", "Nom rue", "Code Postal", "Ville", "Region", "Logo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(diffuseurTab);

        supprimerDiffuseurBouton.setText("Supprimer");
        supprimerDiffuseurBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerDiffuseurBoutonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout diffuseurPanelLayout = new javax.swing.GroupLayout(diffuseurPanel);
        diffuseurPanel.setLayout(diffuseurPanelLayout);
        diffuseurPanelLayout.setHorizontalGroup(
            diffuseurPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diffuseurPanelLayout.createSequentialGroup()
                .addComponent(updateDiffuseur)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(supprimerDiffuseurBouton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1261, Short.MAX_VALUE)
        );
        diffuseurPanelLayout.setVerticalGroup(
            diffuseurPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, diffuseurPanelLayout.createSequentialGroup()
                .addGroup(diffuseurPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateDiffuseur)
                    .addComponent(supprimerDiffuseurBouton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        page.addTab("Diffuseurs", diffuseurPanel);

        evenementTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Description", "Date", "N° Rue", "Nom Rue", "Code Postal", "Ville", "Region", "Annonceur"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(evenementTab);

        updateEvenement.setText("Mise à jour");

        supprimerEvenementBouton.setText("Supprimer");
        supprimerEvenementBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerEvenementBoutonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout evenementPanelLayout = new javax.swing.GroupLayout(evenementPanel);
        evenementPanel.setLayout(evenementPanelLayout);
        evenementPanelLayout.setHorizontalGroup(
            evenementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(evenementPanelLayout.createSequentialGroup()
                .addComponent(updateEvenement)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(supprimerEvenementBouton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1261, Short.MAX_VALUE)
        );
        evenementPanelLayout.setVerticalGroup(
            evenementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, evenementPanelLayout.createSequentialGroup()
                .addGroup(evenementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateEvenement)
                    .addComponent(supprimerEvenementBouton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        page.addTab("Evenements", evenementPanel);

        musiqueTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Titre", "Description", "Genre", "Artiste"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(musiqueTab);

        updateMusique.setText("Mise à jour");

        supprimerMusiqueBouton.setText("Supprimer");
        supprimerMusiqueBouton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerMusiqueBoutonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout musiquePanelLayout = new javax.swing.GroupLayout(musiquePanel);
        musiquePanel.setLayout(musiquePanelLayout);
        musiquePanelLayout.setHorizontalGroup(
            musiquePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(musiquePanelLayout.createSequentialGroup()
                .addGroup(musiquePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(musiquePanelLayout.createSequentialGroup()
                        .addComponent(updateMusique)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(supprimerMusiqueBouton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1251, Short.MAX_VALUE))
                .addContainerGap())
        );
        musiquePanelLayout.setVerticalGroup(
            musiquePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(musiquePanelLayout.createSequentialGroup()
                .addGroup(musiquePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateMusique)
                    .addComponent(supprimerMusiqueBouton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        page.addTab("Musiques", musiquePanel);

        fichierMenu.setText("Fichier");

        ajouterMenuFichier.setText("Ajouter");

        offreMenuAjouter.setText("Offres");
        offreMenuAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offreMenuAjouterActionPerformed(evt);
            }
        });
        ajouterMenuFichier.add(offreMenuAjouter);

        annonceurMenuAjouter.setText("Annonceurs");
        annonceurMenuAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annonceurMenuAjouterActionPerformed(evt);
            }
        });
        ajouterMenuFichier.add(annonceurMenuAjouter);

        diffuseurMenuAjouter.setText("Diffuseurs");
        diffuseurMenuAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diffuseurMenuAjouterActionPerformed(evt);
            }
        });
        ajouterMenuFichier.add(diffuseurMenuAjouter);

        evenementMenuAjouter.setText("Evènements");
        evenementMenuAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evenementMenuAjouterActionPerformed(evt);
            }
        });
        ajouterMenuFichier.add(evenementMenuAjouter);

        musiqueMenuAjouter.setText("Musiques");
        musiqueMenuAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musiqueMenuAjouterActionPerformed(evt);
            }
        });
        ajouterMenuFichier.add(musiqueMenuAjouter);

        fichierMenu.add(ajouterMenuFichier);

        imprimerMenuFichier.setText("Imprimer");
        fichierMenu.add(imprimerMenuFichier);

        quitterMenuFichier.setText("Quitter");
        fichierMenu.add(quitterMenuFichier);

        barreMenu.add(fichierMenu);

        editionMenu.setText("Edition");
        barreMenu.add(editionMenu);

        aideMenu.setText("Aide");
        aideMenu.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        aideMenu.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jMenuItem1.setText("Docs  en ligne et support");
        aideMenu.add(jMenuItem1);

        jMenuItem2.setText("A propos");
        aideMenu.add(jMenuItem2);

        barreMenu.add(aideMenu);

        setJMenuBar(barreMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(page)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(page)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshAllList() {
        refreshListEvenement();
        refreshListAnnonceur();
        refreshListDiffuseur();
        refreshListMusique();
        refreshListOffre();
    }
    
    private void refreshListAnnonceur() {
        DefaultTableModel model = (DefaultTableModel) annonceurTab.getModel();
        model.setNumRows(0);
        
        AnnonceursDAO annonceurDao = new AnnonceursDAO();
        Collection<Annonceur> annonceurs = AnnonceursDAO.lister(cnx);
        
        for(Annonceur a : annonceurs) {
            model.addRow(new Object[]{
                a.getNom(),
                a.getMail(),
                a.getNumeroTel(),
                a.getAdresse().getNumero(),
                a.getAdresse().getRue(),
                a.getAdresse().getCodePostal(),
                a.getAdresse().getVille(),
                a.getAdresse().getLocalisation()
            });
        }
    }
    
    private void refreshListDiffuseur() {
        DefaultTableModel model = (DefaultTableModel) diffuseurTab.getModel();
        model.setNumRows(0);
        
        DiffuseursDAO diffuseurDAO = new DiffuseursDAO();
        Collection<Diffuseur> diffuseurs = DiffuseursDAO.lister(cnx);
        
        for(Diffuseur d : diffuseurs) {
            model.addRow(new Object[]{
                d.getNom(),
                d.getMail(),
                d.getNumeroTel(),
                d.getAdresse().getNumero(),
                d.getAdresse().getRue(),
                d.getAdresse().getCodePostal(),
                d.getAdresse().getVille(),
                d.getAdresse().getLocalisation()
            });
        }
    }
    
    private void refreshListOffre() {
        DefaultTableModel model = (DefaultTableModel) offreTab.getModel();
        model.setNumRows(0);
        
        OffreDAO offreDAO = new OffreDAO();
        Collection<Offre> offres = OffreDAO.lister(cnx);
        
        for(Offre o : offres) {
            model.addRow(new Object[]{
                o.getTitre(),
                o.getReference(),
                o.getDate_debut_publi(),
                o.getFin_publi(),
                o.getNbr_poste(),
                o.getDescription_poste(),
                o.getDescription_profil(),
                o.getDuree(),
                o.getContrat().getLibelle(),
                o.getAnnonceur().getNom(),
                o.getDiffuseur().getNom(),
                o.getMetier().getLibelle()
            });
        }
    }
    
    private void refreshListEvenement() {
        DefaultTableModel model = (DefaultTableModel) evenementTab.getModel();
        model.setNumRows(0);
        
        EvenementDAO evenementDAO = new EvenementDAO();
        Collection<Evenement> evenements = EvenementDAO.lister(cnx);
        
        for(Evenement event : evenements) {
            model.addRow(new Object[]{
                event.getNom(),
                event.getDescription(),
                event.getDateEvenement(),
                event.getAdresse().getNumero(),
                event.getAdresse().getRue(),
                event.getAdresse().getCodePostal(),
                event.getAdresse().getVille(),
                event.getAdresse().getLocalisation(),
                event.getAnnonceur().getNom()
            });
        }
    }
    
    private void refreshListMusique() {
        DefaultTableModel model = (DefaultTableModel) musiqueTab.getModel();
        model.setNumRows(0);
        
        MusiqueDAO musiqueDAO = new MusiqueDAO();
        Collection<Musique> musiques = MusiqueDAO.lister(cnx);
        
        for(Musique m : musiques) {
            model.addRow(new Object[]{
                m.getTitre(),
                m.getDescription(),
                m.getGenre(),
                m.getUtilisateur().getNom_artiste()
            });
        }
    }
    
    private void evenementMenuAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evenementMenuAjouterActionPerformed
        // TODO add your handling code here
        ajouterEvenement ajouterEvenementFrame = new ajouterEvenement();
        ajouterEvenementFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        ajouterEvenementFrame.setSize(600, 600);
        ajouterEvenementFrame.setVisible(true);
    }//GEN-LAST:event_evenementMenuAjouterActionPerformed

    private void offreMenuAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offreMenuAjouterActionPerformed
        // TODO add your handling code here:
        ajouterOffre ajouterOffreFrame = new ajouterOffre();
        ajouterOffreFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        ajouterOffreFrame.setSize(1200, 600);
        ajouterOffreFrame.setVisible(true);
    }//GEN-LAST:event_offreMenuAjouterActionPerformed

    private void annonceurMenuAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annonceurMenuAjouterActionPerformed
        // TODO add your handling code here:
        ajouterAnnonceur ajouterAnnonceurFrame = new ajouterAnnonceur();
        ajouterAnnonceurFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        ajouterAnnonceurFrame.setSize(600, 600);
        ajouterAnnonceurFrame.setVisible(true);
    }//GEN-LAST:event_annonceurMenuAjouterActionPerformed

    private void offreTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_offreTabMouseClicked
        // TODO add your handling code here:
        try {
            int row = offreTab.getSelectedRow();
            String Table_click = (offreTab.getModel().getValueAt(row, 0).toString());
            String sql = "SELECT * FROM Offre WHERE id_offre ='" + Table_click + "' ";
            pst = cnx.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                String add1  = rs.getString("");
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_offreTabMouseClicked

    private void updateOffreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateOffreActionPerformed
        // TODO add your handling code here:
        
        String titre = JOptionPane.showInputDialog("Entrer le titre de l'offre");
        String reference = JOptionPane.showInputDialog("Entrer la référence");
        String dateFin = JOptionPane.showInputDialog("Entrer la date de fin");
        String nbrPoste = JOptionPane.showInputDialog("Entrer le nombre de poste");
        

        //offreTab.getModel().setValueAt(name, offreTab.getSelectedRow(), 0);
        
    }//GEN-LAST:event_updateOffreActionPerformed

    private void updateAnnonceursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAnnonceursActionPerformed
        // TODO add your handling code here:
        String nom = JOptionPane.showInputDialog("Entrer votre nom");
    }//GEN-LAST:event_updateAnnonceursActionPerformed

    private void updateDiffuseurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDiffuseurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateDiffuseurActionPerformed

    private void diffuseurMenuAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diffuseurMenuAjouterActionPerformed
            // TODO add your handling code here:
        ajouterDiffuseur ajouterDiffuseurFrame = new ajouterDiffuseur();
        ajouterDiffuseurFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        ajouterDiffuseurFrame.setSize(600, 600);
        ajouterDiffuseurFrame.setVisible(true);
    }//GEN-LAST:event_diffuseurMenuAjouterActionPerformed

    private void musiqueMenuAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musiqueMenuAjouterActionPerformed
        // TODO add your handling code here:
        ajouterMusique ajouterMusiqueFrame = new ajouterMusique();
        ajouterMusiqueFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        ajouterMusiqueFrame.setSize(600, 600);
        ajouterMusiqueFrame.setVisible(true);
    }//GEN-LAST:event_musiqueMenuAjouterActionPerformed

    private void supprimerOffreBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerOffreBoutonActionPerformed
        // TODO add your handling code here:
        Offre offreSelected = OffreDAO.lister(cnx).get(offreTab.getSelectedRow());

        
        if(offreSelected != null){
            new  OffreDAO().supprimer(cnx, offreSelected);
        }
        refreshListOffre();
    }//GEN-LAST:event_supprimerOffreBoutonActionPerformed

    private void supprimerAnnonceurBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerAnnonceurBoutonActionPerformed
        // TODO add your handling code here:
        Annonceur annonceurSelected = AnnonceursDAO.lister(cnx).get(annonceurTab.getSelectedRow());

        
        if(annonceurSelected != null){
            new  AnnonceursDAO().supprimer(cnx, annonceurSelected);
        }
        refreshListOffre();
    }//GEN-LAST:event_supprimerAnnonceurBoutonActionPerformed

    private void supprimerDiffuseurBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerDiffuseurBoutonActionPerformed
        // TODO add your handling code here:
        Diffuseur diffuseurSelected = DiffuseursDAO.lister(cnx).get(annonceurTab.getSelectedRow());

        
        if(diffuseurSelected != null){
            new  DiffuseursDAO().supprimer(cnx, diffuseurSelected);
        }
        refreshListOffre();
    }//GEN-LAST:event_supprimerDiffuseurBoutonActionPerformed

    private void supprimerEvenementBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerEvenementBoutonActionPerformed
        // TODO add your handling code here:
        Evenement evenementSelected = EvenementDAO.lister(cnx).get(annonceurTab.getSelectedRow());

        
        if(evenementSelected != null){
            new  EvenementDAO().supprimer(cnx, evenementSelected);
        }
        refreshListOffre();
    }//GEN-LAST:event_supprimerEvenementBoutonActionPerformed

    private void supprimerMusiqueBoutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerMusiqueBoutonActionPerformed
        // TODO add your handling code here:
        Musique musiqueSelected = MusiqueDAO.lister(cnx).get(annonceurTab.getSelectedRow());

        
        if(musiqueSelected != null){
            new  MusiqueDAO().supprimer(cnx, musiqueSelected);
        }
        refreshListOffre();
    }//GEN-LAST:event_supprimerMusiqueBoutonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        refreshAllList();
    }//GEN-LAST:event_jButton1ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MegaCastingMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MegaCastingMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MegaCastingMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MegaCastingMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MegaCastingMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AccueilPanel;
    private javax.swing.JMenu aideMenu;
    private javax.swing.JMenu ajouterMenuFichier;
    private javax.swing.JMenuItem annonceurMenuAjouter;
    private javax.swing.JPanel annonceurPanel;
    private javax.swing.JTable annonceurTab;
    private javax.swing.JMenuBar barreMenu;
    private javax.swing.JMenuItem diffuseurMenuAjouter;
    private javax.swing.JPanel diffuseurPanel;
    private javax.swing.JTable diffuseurTab;
    private javax.swing.JMenu editionMenu;
    private javax.swing.JMenuItem evenementMenuAjouter;
    private javax.swing.JPanel evenementPanel;
    private javax.swing.JTable evenementTab;
    private javax.swing.JMenu fichierMenu;
    private javax.swing.JMenuItem imprimerMenuFichier;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JMenuItem musiqueMenuAjouter;
    private javax.swing.JPanel musiquePanel;
    private javax.swing.JTable musiqueTab;
    private javax.swing.JMenuItem offreMenuAjouter;
    private javax.swing.JPanel offrePanel;
    private javax.swing.JTable offreTab;
    private javax.swing.JTabbedPane page;
    private javax.swing.JMenuItem quitterMenuFichier;
    private javax.swing.JButton supprimerAnnonceurBouton;
    private javax.swing.JButton supprimerDiffuseurBouton;
    private javax.swing.JButton supprimerEvenementBouton;
    private javax.swing.JButton supprimerMusiqueBouton;
    private javax.swing.JButton supprimerOffreBouton;
    private javax.swing.JButton updateAnnonceurs;
    private javax.swing.JButton updateDiffuseur;
    private javax.swing.JButton updateEvenement;
    private javax.swing.JButton updateMusique;
    private javax.swing.JButton updateOffre;
    // End of variables declaration//GEN-END:variables
}
